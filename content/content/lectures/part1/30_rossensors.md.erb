---
title: Using Sensors via ROS
desc: How do we use sensor data to actually do something useful?
hwref: week4
slides: true
---
## How does a robot perceive

* Discussion of the pace of the course so far. Fast? Slow? 
* Request special workshops
* Vibe check

<slide_break></slide_break>

### Review - how it works in ROS

* All your code (almost) in ROS is a node
* All information (almost) is transferred in the form of messages
* Sensors
  * Are electronic devices
  * Wired to the built in computer
  * In the case of the TB3, wired to the Arduino
  * Code on the Arduino read the i/o and participate as a node in ROS
  * Publishing information
* ROS info required
  * What is the "topic" that the device publishes to
  * How frequently does it publish (e.g. 10 times per second, once every second)
  * And what is the message type
* Acting on the sensor data
  * A node subscribes to that topic
  * Writes a "handler" which is invoked each time the sensor node publishes
* Simulation and IRL are different
  * Sensor's specifications are different (subtly)
  * Ranges and what happens when out of range
  * Degree of "randomness"
  * Exact dimensions of robots, obstacles, etc.

<slide_break></slide_break>


<%= include_topic :pid_control %>

 
## Lets look at some code that uses sensors

* [`prrexamples/pid_driver4.py`](https://github.com/campusrover/prrexamples/blob/master/scripts/pid_driver.py)
* [`prrexamples/pid_range.py`](https://github.com/campusrover/prrexamples/blob/master/scripts/pid_range.py)

## That's all!