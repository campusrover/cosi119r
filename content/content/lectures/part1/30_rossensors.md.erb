---
title: Using Sensors via ROS
desc: How do we use sensor data to actually do something useful?
hwref: week5
slides: true
---
## How does a robot perceive

* Checkin Questions
* Discussion of the pace of the course so far. Fast? Slow?
* Request special workshops
* Pop Quiz => "idk"

<slide_break></slide_break>

### Review of answers in previous idk's and participation submissions

* Units of Odom/Orientation? Quaternions
* If Odometry used only wheel rotation the results are inaccurate due to slippage, skidding, and so on.
* How does roscore coordinate communication between nodes?
* What does roslaunch do?
* What does catkin do?
* What is remapping? :=
* What is the key difference between a topic and a service? And what are some examples of services?
* How can I determine how many degrees of freedom something has?
* Look at LaserScan data and talk about the bearing formula

<slide_break></slide_break>

### Review - how it works in ROS

* All your code (almost) in ROS is a node
* All information (almost) is transferred in the form of messages
* Sensors
  * Are electronic devices
  * Wired to the built in computer
  * In the case of the TB3, wired to the Arduino
  * Code on the Arduino read the i/o and participate as a node in ROS
  * Publishing information
* ROS info required
  * What is the "topic" that the device publishes to
  * How frequently does it publish (e.g. 10 times per second, once every second)
  * And what is the message type
* Acting on the sensor data
  * A node subscribes to that topic
  * Writes a "handler" which is invoked each time the sensor node publishes
* Simulation and IRL are different
  * Sensor's specifications are different (subtly)
  * Ranges and what happens when out of range
  * Degree of "randomness"
  * Exact dimensions of robots, obstacles, etc.

### Real Robots Don't Drive Straight - short breakout

* What was the "Real Robots Don't Drive Straight" about?
* What is/or are your key takeaways What surprised you?
* In breakout group - please nominate who will report out

<slide_break></slide_break>

<%= include_topic :pid_control %>

### Lets look at some code that uses sensors

* Coming Soon

## That's All For Today!
