---
title: "How do mobile Robots move?"
desc: Wheels, legs and other ways for robots to move around 3D space
slides: true
---
:h3 Logistics

* Project teams
  * I will review all the teams and make final decisions based on makeup and preferences
  * Teams will be no more than 3 students
  * I am going to want to have the more experienced students spread between the teams, not all together on one teams
  * This is necessary to help everyone be successful
* Second Lab Time
  * Thursdays 10:00 to 12:00
  * Test, lets see how it goes
* About "extra challenges"
  * You don't have to do all of them!
  
:slide_bigtitle Steering and navigation

* Focusing for now on autonomous, ground based mobile robots.
* Software needs to be able to command the robot
* Given wheels with motors, or tracks, or casters, or legs
* See [Types of wheels used in robotics](https://roboticsshop.net/types-of-wheels-used-in-robotics)
* Electricity controlled through software makes them move
* So consider this...

:slide_title What is needed (data, sensors, algorithms) 

* Discuss in groups. Pick one of these problems and your approach to them. Create a 3 slide (either real or on paper), 3 minute presentation with details, code, diagrams or whatever you need to make it clear!

  1. Drive in a straight road: how do you detect the road? How do you stay on your side? What sensors are needed?
  1. Turn a corner: How do you identify a corner? Left vs Right Corner? What about a hallway? What about a dead end?
  1. Make a 90 degree turn: Without any landmarks, in an open field? Is left or right different?
  1. Stay in a lane: How do you identify the lane? What about road conditions? What about night vs. day?
  1. Steer from Shapiro to Usdan: How do you designate where Usdan is? What other information do you require?
  1. Move at x Meters/second: Make it as precise as possible; even if the road is slippery or there's a steep hill

:slide_bigtitle Concept: Degrees of Freedom

:slide_title DOF: How many does each one have?

* Train?
* Baseball?
* Drone?
* Car?
* Tank?

:slide_title DOF: Considerations

* Degrees of freedom:
  1. Vehicles
  1. But also grippers, arms, doors, anything that can move
* Subtleties of you look for them...
  1. Consider which coordinate system
  1. Fixed attachments
  1. Single instantaneous motion

:topic_include :pid_control

:slide_bigtitle Locomotion: Holonomic vs. Non-Holonomic

* Actual vs. Controllable degrees of freedom
* If they are the same, then Holonomic
* If they are different, then non-Holonomic
* Car
  1. Will never leave the ground
  1. So it's actual DoF is 3 (move forward and sideways, and yaw)
  1. But its controllable DoF is 2 (wheel rotation and steering)
* Differential Drive
  1. Actual DoF is 3 also
  1. Controllable DoF is 1 (wheel rotation)

:slide_title Different Configurations for wheeled

* "Differential drive"
  1. Steering is achieved by driving wheels at different speeds
  1. Geometry calculations to determine what delta rpm leads to what kind of turn
  1. Usually three wheels, two with motors, one "caster" (or two)
  1. Different kinds of caster make a difference (I found this out)
  
* Tri-cycle steering
  1. Two fixed Wheels
  1. A third wheel with a steerable mount
* [Ackermann Steering](https://en.wikipedia.org/wiki/Ackermann_steering_geometry)
  1. Where the steering is achieved by actual rotation of the wheel mount
  1. Note subtle difference from parallel steering
* Four wheel drive
* Articulated Vehicle
  1. Where the vehicle itself has a pivot point
  1. Notice that to steer the vehicle an algorithm needs to convert the desired rotation to proportional wheel spinning

:slide_title Firmware

* Software and hardware architecture
* cmd_vel: needs to convert from high level units to motor commands
* odom: needs to convert from sensors (motor decoder and others) into coordinates
* Big deal is being aware of known errors from the manufacturer
* We wont go into the detailed geometry and math but it is very well studied and understood

:slide_bigtitle Introducing Kinematics

* In general: given a pose, and a series of `commands`, calculate the new pose (forward kinematics)
* And, given a pose and a desired new pose, what are the series of commands that will get you there (inverse kinematics)
* Note that the concept and terminology apply equally to vehicles and to other structures
* Requirement:
  1. An initial pose
  1. A final pose
  1. A series of `commands`
  1. A way to calculate the relationship
* For a differential drive, the math is complex but well understood
* Note the relationship to path planning

:slide_title Other scenarios

* Legged Vehicles
* Tracked vehicles (tanks)
* Water surface vehicles
* Under water vehicles
* Aerial vehicles

:slide_title Terrain

* Indoor vs. outdoor
  * Traction and slippage
  * Weather effects - wet, dry, light, dark
  * Visibility of Sky
* Inclines and declines and surface
  * Needs more force
  * Also affects levelness
  * Direction that cameras and sensors are pointed

:slide_title The role of sensors in controlling motion

* Self-sensors (like odometry)
* External sensors (like LIDAR)

:slide_title Links for further study

* Learning Quaternions: [Quaternions Online](https://quaternions.online/)
* TB3 Burger uses [HLS-LFCD2](https://dabit.industries/products/360-laser-distance-sensor-lds-01-lidar)
* MiniRover uses [YDlidar X4](https://www.ydlidar.com/Public/upload/files/2020-04-13/YDLIDAR%20X4%20Datasheet.pdf)
* Review of dead reckoning


:lecture_end
