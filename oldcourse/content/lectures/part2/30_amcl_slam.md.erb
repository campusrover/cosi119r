---
title: "AMCL: Localization in practice"
desc: Look at the mechanics of SLAM and AMCL
homework: 1) TB3 Slam Homework; 2) Term project Proposal
cat: general
---
<%= homework_hdr %>

1. <%= pdfbadge %> Please do <%= link_to_topic :hw_turtlebot3_slam %>. <%= deliverable "create the deliverables as explained in the writeup." %>

1. <%= pdfbadge %> **Proposal**: Submit your Term Project Proposal. See <%= link_to_section :lab, :project_list %>. <%= deliverable "The proposal as described; team partners can submit the same proposal."%>

<%= include_topic :localization %>

#### Discuss projects

* Look at deliverables
* Discuss status

#### AMCL in more detail

* **AMCL: Advanced Monte Carlo Localization** (I've also seen "Augmented" and "Adaptive". Go figure.)
* You might be interested in these [Advanced Localization Slides](/content/topics/documents/localization.pdf).
* I will be using these [Localization Slides](/content/topics/documents/f1slides.pdf) and information from [this very useful and in depth paper](https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume11/fox99a-html/jair-localize.html)
* And another useful link: [Where am I](https://medium.com/@NickHortovanyi/where-am-i-6cc0f6608c4c)

##### Monte Carlo

* That's where the Casinos are!
* Algorithms that incorporate random guesses when a direct solution is hard or not feasible
* Diagram on the board how you would calculate Pi using a Monte Carlo Algorithm
* And here's a [Video of Monte Carlo Pi](https://youtu.be/ELetCV_wX_c)
* Note for `PI` it's a very inefficient way to get an accurate result
* But it illustrates the idea of Monte Carlo estimation

##### Localization
* Markov localization
* Markov means that the new state is dependent only on the previous state (and not the history) and that the probability distributions are 
* Markov localization = state estimation from sensor data
* Probabilistic algorithm
* See figure in powerpoints
* Belief, Sense, Update ... etc.
* But how is the belief represented, and how is the update done efficiently

##### Particle Filter
* Instead of "solving" the equation for all data and all points
* Use a monte-carlo technique
* Generate a random collection of candidate locations
* Compute the motion
* Adjust the probability of each particle

#### Next Class
* Look at homework: <%= link_to_next_lecture %>